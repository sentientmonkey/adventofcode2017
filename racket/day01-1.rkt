#lang racket/base
(require racket/list)

(module+ test
  (require rackunit))

(define (sum-helper lst)
  (for/fold ([sum 0]
             [prev (last lst)])
            ([i lst])
            (values (if (eq? i prev)
                      (+ sum i)
                      sum)
                    i)))

(define (sum-of-sequences l)
  (let-values
    ([(x y) (sum-helper l)]) x))

(module+ test
  (check-equal?
    (sum-of-sequences '(1 1 2 2)) 3)
  (check-equal?
    (sum-of-sequences '(1 1 1 1)) 4)
  (check-equal?
    (sum-of-sequences '(1 2 3 4)) 0)
  (check-equal?
    (sum-of-sequences '(9 1 2 1 2 1 2 9)) 9))

(define (string->number-list s)
  (map (lambda (x) (string->number (make-string 1 x)))
       (string->list s)))

(module+ test
  (check-equal?
    (string->number-list "1122") '(1 1 2 2)))

(define (captcha s)
  (sum-of-sequences (string->number-list s)))

(module+ test
  (check-equal?
    (captcha "1122") 3)
  (check-equal?
    (captcha "91212129") 9))

(captcha
